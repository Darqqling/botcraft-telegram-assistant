
import { InlineKeyboardMarkup } from '../../telegramService';
import { sendMessage } from './messageUtils';

// Handle start command by showing main menu buttons
export const handleStartCommand = async (
  token: string,
  chatId: number,
  userId: number
): Promise<any> => {
  console.log(`[MenuCommands] Handling start command for user ${userId} in chat ${chatId}`);
  
  const welcomeMessage = `
üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ü–æ–¥–∞—Ä–æ—á–Ω—ã–π –ë–æ—Ç!

–Ø –ø–æ–º–æ–≥—É –≤–∞–º –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å —Å–±–æ—Ä —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –ø–æ–¥–∞—Ä–æ–∫ –∏–ª–∏ –¥—Ä—É–≥–æ–µ —Å–æ–≤–º–µ—Å—Ç–Ω–æ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ.
–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ:
  `;

  const mainMenu: InlineKeyboardMarkup = {
    inline_keyboard: [
      [
        { text: "üîπ –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —Å–±–æ—Ä", callback_data: "new_collection" }
      ],
      [
        { text: "üîπ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–æ–∏ —Å–±–æ—Ä—ã", callback_data: "my_collections" }
      ],
      [
        { text: "üîπ –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç?", callback_data: "how_it_works" }
      ],
      [
        { text: "üîπ –ü–æ–º–æ—â—å", callback_data: "help" }
      ]
    ]
  };

  return sendMessage(token, chatId, welcomeMessage, { replyMarkup: mainMenu });
};

// Handle help command
export const handleHelpCommand = async (
  token: string,
  chatId: number
): Promise<any> => {
  console.log(`[MenuCommands] Handling help command in chat ${chatId}`);
  
  const helpMessage = `
üìö –ü–æ–º–æ—â—å –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞:

–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
/start - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –∏ –ø–æ–∫–∞–∑–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ

–î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ —Å–±–æ—Ä–∞ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —Å–±–æ—Ä" –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é.
–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤–∞—à–∏—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–±–æ—Ä–æ–≤ –Ω–∞–∂–º–∏—Ç–µ "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–æ–∏ —Å–±–æ—Ä—ã".

–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã, –Ω–∞–ø–∏—à–∏—Ç–µ /start —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.
  `;

  const backButton: InlineKeyboardMarkup = {
    inline_keyboard: [
      [
        { text: "‚¨ÖÔ∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data: "back_to_main" }
      ]
    ]
  };

  return sendMessage(token, chatId, helpMessage, { replyMarkup: backButton });
};

// Handle how_it_works command
export const handleHowItWorksCommand = async (
  token: string,
  chatId: number
): Promise<any> => {
  console.log(`[MenuCommands] Handling how_it_works command in chat ${chatId}`);
  
  const howItWorksMessage = `
üîç –ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –ü–æ–¥–∞—Ä–æ—á–Ω—ã–π –ë–æ—Ç:

1Ô∏è‚É£ –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π —Å–±–æ—Ä, —É–∫–∞–∑–∞–≤ –Ω–∞–∑–≤–∞–Ω–∏–µ, –æ–ø–∏—Å–∞–Ω–∏–µ –∏ —Ü–µ–ª–µ–≤—É—é —Å—É–º–º—É
2Ô∏è‚É£ –ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤, –æ—Ç–ø—Ä–∞–≤–∏–≤ –∏–º —Å—Å—ã–ª–∫—É –∏–ª–∏ –¥–æ–±–∞–≤–∏–≤ –±–æ—Ç–∞ –≤ –≥—Ä—É–ø–ø–æ–≤–æ–π —á–∞—Ç
3Ô∏è‚É£ –£—á–∞—Å—Ç–Ω–∏–∫–∏ –≤–Ω–æ—Å—è—Ç —Å–≤–æ–∏ –≤–∑–Ω–æ—Å—ã —á–µ—Ä–µ–∑ –±–æ—Ç–∞
4Ô∏è‚É£ –ö–æ–≥–¥–∞ —Ü–µ–ª–µ–≤–∞—è —Å—É–º–º–∞ —Å–æ–±—Ä–∞–Ω–∞, –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä –º–æ–∂–µ—Ç –∑–∞–≤–µ—Ä—à–∏—Ç—å —Å–±–æ—Ä
5Ô∏è‚É£ –í—Å–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ –ø–æ–ª—É—á–∞—é—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Å–±–æ—Ä–∞

–ë–æ—Ç –ø–æ–º–æ–≥–∞–µ—Ç –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —Å—Ç–∞—Ç—É—Å —Å–±–æ—Ä–∞ –∏ —É–ø—Ä–æ—â–∞–µ—Ç –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏—é –º–µ–∂–¥—É —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏.
  `;

  const backButton: InlineKeyboardMarkup = {
    inline_keyboard: [
      [
        { text: "‚¨ÖÔ∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data: "back_to_main" }
      ]
    ]
  };

  return sendMessage(token, chatId, howItWorksMessage, { replyMarkup: backButton });
};

// Handle my_collections command
export const handleMyCollectionsCommand = async (
  token: string,
  chatId: number,
  userId: number
): Promise<any> => {
  console.log(`[MenuCommands] Handling my_collections command for user ${userId} in chat ${chatId}`);
  
  // This will be implemented to fetch and display the user's collections
  const collectionsMessage = `
üìã –í–∞—à–∏ –∞–∫—Ç–∏–≤–Ω—ã–µ —Å–±–æ—Ä—ã:

–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–±–æ—Ä–æ–≤. 
–°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π —Å–±–æ—Ä, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É "–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —Å–±–æ—Ä" –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é.
  `;

  const backButton: InlineKeyboardMarkup = {
    inline_keyboard: [
      [
        { text: "‚¨ÖÔ∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data: "back_to_main" }
      ]
    ]
  };

  return sendMessage(token, chatId, collectionsMessage, { replyMarkup: backButton });
};

// Handle back to main menu command
export const handleBackToMainCommand = async (
  token: string,
  chatId: number,
  userId: number
): Promise<any> => {
  console.log(`[MenuCommands] Handling back_to_main command for user ${userId} in chat ${chatId}`);
  return handleStartCommand(token, chatId, userId);
};
